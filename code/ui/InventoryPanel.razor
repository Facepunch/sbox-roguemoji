@using Sandbox;
@using Sandbox.UI;

@inherits GridPanel;
@namespace Interfacer

<style>
    .inventory_bg 
    {
        opacity: 0.005;
        background-color: transparent;
        box-shadow: 0px 0px 0px #0000ff;

        position:absolute;
        pointer-events:all;
        background-repeat: repeat;
        background-position: 0 0;
        background-size: 80px;
        border-radius:3px;
        width:100%;
        height:100%;
    }
</style>

<root>
    <div class="inventory_bg" style="background-image: url( textures/bg_tile.png );" @onclick=@OnBgClicked></div>

    @if(InterfacerGame.Instance.LocalPlayer?.InventoryGridManager?.Things == null)
    {
        return;
    }

    @foreach(var thing in GetThings())
    {
        var index = GetIndex(thing.GridPos);
        <GridCell style="left: @(thing.GridPos.x * 40); top: @(thing.GridPos.y * 40);" Thing=@thing @Index=@index @onmouseover=@(() => HoveredCellIndex = index ) @onclick=@(() => OnThingClicked(index)) />
    }
</root>

@code
{
    public override int GridWidth => InterfacerGame.InventoryWidth;
    public override int GridHeight => InterfacerGame.InventoryHeight;

    protected override IList<Thing> GetThings()
    {
        return InterfacerGame.Instance.LocalPlayer.InventoryGridManager.Things;
        //return InterfacerGame.Instance.LocalPlayer?.GridManager?.Things ?? new List<Thing>();
    }

    protected override void OnThingClicked(int index)
    {
        var gridPos = GridManager.GetGridPos(index, GridWidth);
        Hud.Instance.GridCellClickedInventory(gridPos);
    }

    protected override void OnBgClicked()
    {
        Hud.Instance.GridCellClickedInventory(GetGridPos(MousePosition));
    }
}