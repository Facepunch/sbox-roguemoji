@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Interfacer

<style>
    .cell
    {
        width: 40px;
        height: 40px;
		justify-content: center;
        align-items: center;
        text-align: center;
        color:#ffffff;
        border: 1px solid #ffffff00;

        font-size:29px;
        position: relative;
        top: -2px;

        &:active
        {
            border: 1px solid #ffffff88;
        }
    }

    .player-1 { text-stroke-color: #3333ff; text-stroke-width: 4px; }
    .player-2 { text-stroke-color: #ff0000; text-stroke-width: 4px; }
    .player-3 { text-stroke-color: #009900; text-stroke-width: 4px; }
    .player-4 { text-stroke-color: #ff00ff; text-stroke-width: 4px; }
    .player-5 { text-stroke-color: #ffff00; text-stroke-width: 4px; }
    .player-6 { text-stroke-color: #2299ff; text-stroke-width: 4px; }
    .player-7 { text-stroke-color: #444444; text-stroke-width: 4px; }
    .player-8 { text-stroke-color: #8800bb; text-stroke-width: 4px; }

    .dark
    {
        background-color: #171717ff;
    }

    .light
    {
        background-color: #202020ff;
    }

    .selected
    {
        border: 1px solid #7777ff88;
    }
</style>

<button class="cell @cellClass(Index) @selectedClass() @playerClass()" @onclick=@( () => OnClick(Index)) ) >@Text</button>

@code
{
    public int Index { get; set; }
    public int PlayerNum { get; set; }

    public string Text { get; private set; }

    public bool IsSelected { get; set; }

    //public PanelEvent onClicked { get; set; }

    private string cellClass(int i)
    {
        var coords = GetCoords();
        return coords.x % 2 == coords.y % 2 ? "dark" : "light";
    }

    public IntVector GetCoords()
    {
        return new IntVector(Index % InterfacerGame.GridWidth, MathX.FloorToInt((float)Index / (float)InterfacerGame.GridWidth));
    }

    private string selectedClass()
    {
        if (IsSelected)
            return "selected";
        else 
            return "";
    }

    private string playerClass()
    {
        return PlayerNum > 0 ? $"player-{PlayerNum}" : "";
    }

    public void OnClick(int index)
    {
        Hud.Instance.GridCellClicked(this);
    }

    public void SetSelected(bool isSelected)
    {
        IsSelected = isSelected;
        StateHasChanged();
    }

    public void Refresh()
    {
        StateHasChanged();
    }

    public void SetText(string text)
    {
        Text = text;
    }

    public void SetPlayerNum(int num)
    {
        PlayerNum = num;
    }
}