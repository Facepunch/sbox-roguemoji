@using System;
@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Roguemoji

<style>
    .stats
    {
        flex-direction:column;
        border-radius: 3px;
        background-color: #101010;
        flex-wrap: wrap;
        //height: 80%;
        justify-content: center;
        margin: 20px 20px 20px 0;
        padding: 4px;
    }

    .stat_display
    {
        border: 1px solid #151515;
        border-radius: 3px;
        margin: 2px;
        background-color: #050505;
        padding: 2px;
    }

    .stat_icon
    {
        font-size: 18px;
        color: white;
        text-align: center;
    }

    .stat_label
    {
        font-size: 22px;
        color: #ffffff88;
        text-align: center;
    }
</style>

<root class="stats">
    @if(Thing == null)
    {
        return;
    }

    @foreach(var pair in Thing.Stats)
    {
        <div class="stat_display">
            <span class="stat_icon"> @($"{pair.Value.Icon}") </span>
            <span class="stat_label"> @($"{pair.Value.CurrentValue}") </span>
        </div>
    }
</root>

@code
{
    public Thing Thing { get; set; }

    string GetSelectedClass()
    {
        return RoguemojiGame.Instance.LocalPlayer?.SelectedThing != null ? "thing_selected" : "";
    }

    string GetPlayerClass()
    {
        return (RoguemojiGame.Instance.LocalPlayer?.SelectedThing?.PlayerNum ?? 0) > 0 ? $"icon-player-{RoguemojiGame.Instance.LocalPlayer.SelectedThing.PlayerNum}" : "";
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( RoguemojiGame.Instance.LocalPlayer?.SelectedThing?.GetInfoDisplayHash() ?? 0 );
    }
}