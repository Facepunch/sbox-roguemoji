@using System;
@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Roguemoji

<style>
    .stats
    {
        flex-direction:column;
        align-items:center;
        justify-content:center;
        border: 1px solid #ffffff05;
        background-color: #ff000099;
    }

    .icon
    {
        margin: 0 0 5px 0;
        font-size: 45px;
    }

    .equipped 
    {
        width: 40px;
        height: 40px;
        position: absolute;
        left: 35px;
        top: 35px;
        font-size: 24px;
        pointer-events: none;
        text-stroke-color: #00000000; 
        text-stroke-width: 0px;
    }

    .name_label
    {
        margin: 0 0 5px 0;
        font-size: 22px;
        color: #ffffff77;
    }

    .hp_label
    {
        margin: 0 0 5px 0;
        font-size: 22px;
        color: #ffffff77;
    }

    .equipment_label
    {
        //margin: 0 0 5px 0;
        font-size: 20px;
        color: #44554477;
        font-style: italic;
    }

    .thing_selected
    {
        border: 1px solid #bbbbff44;
    }

    .debug
    {
        color: #44554499;
        font-size: 12px;
    }
</style>

<root class="stats">
    @if(Thing == null)
    {
        return;
    }

    <!-- <div class="debug"> @thing.GridPos TAGS: @thing.Flags GRID: @thing.ContainingGridManager.GridType @thing.ContainingGridManager.GetThingsAtClient(thing.GridPos).Count() </div> -->
</root>

@code
{
    public Thing Thing { get; set; }

    string GetSelectedClass()
    {
        return RoguemojiGame.Instance.LocalPlayer?.SelectedThing != null ? "thing_selected" : "";
    }

    string GetPlayerClass()
    {
        return (RoguemojiGame.Instance.LocalPlayer?.SelectedThing?.PlayerNum ?? 0) > 0 ? $"icon-player-{RoguemojiGame.Instance.LocalPlayer.SelectedThing.PlayerNum}" : "";
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( RoguemojiGame.Instance.LocalPlayer?.SelectedThing?.GetInfoDisplayHash() ?? 0 );
    }
}