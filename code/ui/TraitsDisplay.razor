@using System;
@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Roguemoji

<style>
    .traits
    {
        flex-direction:column;
        border-radius: 3px;
        background-color: #101010;
        flex-wrap: wrap;
        //max-height: 204px;
        //height: 80%;
        //justify-content: space-between;
        justify-content: space-evenly;
        margin: 20px 20px 20px 0;
        padding: 3px;
    }
</style>

<root class="traits">
    @if(Thing == null)
    {
        return;
    }
    
    @foreach(var trait in Thing.Traits)
    {
        if(ShouldSkipTrait(Thing, trait))
            continue;

        <TraitContainer Trait=@trait></TraitContainer>    
    }
</root>

@code
{
    public Thing Thing { get; set; }

    protected override int BuildHash()
    {
        if (Thing == null)
            return 0;

        return HashCode.Combine( Thing.TraitHash );
    }

    bool ShouldSkipTrait(Thing thing, Trait trait)
    {
        var player = RoguemojiGame.Instance.LocalPlayer;
        bool isUnid = (Thing is Scroll scroll && !player.IsScrollTypeIdentified(scroll.ScrollType)) || (Thing is Potion potion && !player.IsPotionTypeIdentified(potion.PotionType));
        return (isUnid && string.IsNullOrEmpty(trait.TraitName));
    }
}