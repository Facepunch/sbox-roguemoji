@using System;
@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Interfacer

<style>
    .nearby
    {
        flex-direction:column;
        align-items:center;
        overflow: scroll;
    }
</style>

<root class="nearby">
    @{
        InterfacerPlayer player = InterfacerGame.Instance.LocalPlayer;
    }

    @if (player?.ContainingGridManager?.GetThingsAtClient(player.GridPos) == null)
    {
        return;
    }

    @foreach (var thing in GetThings(player))
    {
        <NearbyCell Thing=@thing />
    }
</root>

@code
{
    //public override void Tick()
    //{
    //    base.Tick();

    //}

    IEnumerable<Thing> GetThings(InterfacerPlayer player)
    {
        return player.ContainingGridManager.GetThingsAtClient(player.GridPos).WithNone(ThingFlags.Solid).WithAll(ThingFlags.Selectable);
    }

    protected override int BuildHash()
    {
        var player = InterfacerGame.Instance.LocalPlayer;
        if (player == null)
            return 0;

        //int combinedFlags = 0;
        //foreach (var thing in GetThings(player))
        //{
        //    combinedFlags += (int)thing.Flags;
        //}
        var numThings = GetThings(player).ToList().Count;

        return HashCode.Combine(player.GridPos, numThings, player.InventoryGridManager.Things.Count);
    }

    //protected override Panel CreateTooltipPanel()
    //{
    //    var panel = Hud.Instance.AddChild<CellTooltip>();
    //    panel.Text = Tooltip;
    //    panel.Style.Opacity = 0.25f;
    //    return panel;
    //}

    //protected override void OnAfterTreeRender(bool firstTime)
    //{
    //    base.OnAfterTreeRender(firstTime);

    //}

    //protected override void OnMouseDown(MousePanelEvent e)
    //{
    //    base.OnMouseDown(e);

    //    bool rightClick = e.Button == "mouseright";
    //    InterfacerGame.NearbyThingClickedCmd(Thing.NetworkIdent, rightClick);
    //}
}