@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Roguemoji

<style>
    .cell_tooltip {
        color: white;
        font-size: 16px;
        position: absolute;
        padding: 2px 4px 2px 4px;
        border-radius: 2px;
        border: 1px solid #ffffff33;
        box-shadow: 2px 2px 12px #000000;
        font-family: RobotoMono;
        flex-direction: column;
    }

    .equipment_tooltip {
        background-color: #111111fa;
        color: #ccbbffcc;
        border: 1px solid #ee99ff77;
    }

    .cell_tooltip_line 
    {
        font-size: 13px;
        flex-direction: row;
    }

    .cell_tooltip_action 
    {
        color: #555555;
        padding-right: 6px;
    }

    .cell_tooltip_bind 
    {
        color: #777777;
        padding-right: 4px;
    }
</style>

<root class="cell_tooltip @GetEquipmentClass()">
    @(Hud.GetConfusedText(Hud.GetHallucinationTextThing(Thing, Hud.GetTooltip(Thing), HallucinationTextType.Tooltip)))

    @if(Thing.ContainingGridType == GridType.Inventory)
    {
        if(Thing.HasFlag(ThingFlags.Equipment))
        {
            <div class="cell_tooltip_line">
                <span class="cell_tooltip_action">
                    @(Hud.GetConfusedText("Wear"))
                </span>
                <span class="cell_tooltip_bind">[RMB]</span>
            </div>
        }
        else
        {
            <div class="cell_tooltip_line">
                <span class="cell_tooltip_action">
                    @(Hud.GetConfusedText("Equip"))
                </span>

                <span class="cell_tooltip_bind">[RMB]</span>
            </div>
        }
    }

    @if (IsNearby)
    {
        <div class="cell_tooltip_line">
            <span class="cell_tooltip_action">
                @(Hud.GetConfusedText("Pick Up"))
            </span>

            <span class="cell_tooltip_bind">[RMB]</span>

            @if(ShowPickUpKey)
            {
                <span class="cell_tooltip_bind">[E]</span>
            }
        </div>
    }

</root>

@code
{
    public Thing Thing { get; set; }
    public bool IsNearby { get; set; }
    public bool ShowPickUpKey { get; set; }

    string GetEquipmentClass() { return Thing != null && Thing.HasFlag(ThingFlags.Equipment) ? "equipment_tooltip" : ""; }
}