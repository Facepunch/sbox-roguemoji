@using Sandbox;
@using Sandbox.UI;

@inherits Panel;
@namespace Roguemoji

<style>
    .cell_tooltip {
        color: white;
        font-size: 16px;
        position: absolute;
        padding: 2px 4px 2px 4px;
        border-radius: 2px;
        border: 1px solid #ffffff33;
        box-shadow: 2px 2px 12px black;
        font-family: RobotoMono;
        flex-direction: column;
    }

    .player-0 { background-color: #000000aa; }
    .player-1 { background-color: #3333ffaa; }
    .player-2 { background-color: #ff0000aa; }
    .player-3 { background-color: #009900aa; }
    .player-4 { background-color: #cc00cc99; }
    .player-5 { background-color: #ffff00aa; color: black; }
    .player-6 { background-color: #2299ffaa; }
    .player-7 { background-color: #8800bbaa; }
    .player-8 { background-color: #ff8800aa; }

    .equipment_tooltip {
        background-color: #111111aa;
        color: #ee99ffcc;
        border: 1px solid #ee99ff77;
    }

    .cell_tooltip_line 
    {
        flex-direction: row;
    }

    .cell_tooltip_action 
    {
        color: #444444;
        padding-right: 6px;
    }

    .cell_tooltip_bind 
    {
        color: #888888;
    }
</style>

<root class="cell_tooltip @GetEquipmentClass()">
    @Text

    @if (Thing != null && ShowPickUpKey)
    {
        <div class="cell_tooltip_line">
            <span class="cell_tooltip_action">Pick Up</span>
            <span class="cell_tooltip_bind">[E]</span>
        </div>
    }

</root>

@code
{
    public string Text { get; set; }
    public Thing Thing { get; set; }
    public bool ShowPickUpKey { get; set; }

    string GetEquipmentClass() { return Thing != null && Thing.Flags.HasFlag(ThingFlags.Equipment) ? "equipment_tooltip" : ""; }
}