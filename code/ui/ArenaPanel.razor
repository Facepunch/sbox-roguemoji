@using System;
@using Sandbox;
@using Sandbox.UI;

@inherits GridPanel;
@namespace Interfacer

<style>
    .grid_bg 
    {
        opacity: 0.04;
        position:absolute;
        pointer-events:all;
        background-repeat: repeat;
        background-position: 0 0;
        background-size: 80px;
        border-radius:3px;
        width:100%;
        height:100%;
    }
</style>

<root class>
    <div class="grid_bg" style="background-image: url( textures/bg_tile.png );"></div>
    
    @if(InterfacerGame.Instance.ArenaGridManager?.Things == null)
    {
        return;
    }

    @foreach(Thing thing in GetThings())
    {
        var player = InterfacerGame.Instance.LocalPlayer;
        if(player.IsGridPosVisible(thing.GridPos))
        {
            var offsetGridPos = thing.GridPos - player.CameraGridOffset;
            var index = GetIndex(offsetGridPos);
            <GridCell style="left: @(offsetGridPos.x * 40); top: @(offsetGridPos.y * 40);" Thing=@thing GridIndex=@index @onmouseover=@(() => HoveredCellIndex = index )) />    
        }
    }
</root>

@code
{
    public override int GridWidth => InterfacerGame.ArenaWidth;
    public override int GridHeight => InterfacerGame.ArenaHeight;

    protected override IList<Thing> GetThings()
    {
        return InterfacerGame.Instance.ArenaGridManager?.Things ?? new List<Thing>();
    }

    protected override void OnMouseDown(MousePanelEvent e)
    {
        base.OnMouseDown(e);

        var player = InterfacerGame.Instance.LocalPlayer;
        Hud.Instance.GridCellClickedArena(GetGridPos(MousePosition) + player.CameraGridOffset, rightClick: e.Button == "mouseright", shift: Input.Down(InputButton.Run));
    }

    protected override int BuildHash()
    {
        var player = InterfacerGame.Instance.LocalPlayer;
        return HashCode.Combine(GetThings().Count, player.CameraGridOffset);
    }
}