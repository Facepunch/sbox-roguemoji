@using System;
@using Sandbox;
@using Sandbox.UI;
@using System.Collections.Generic;

@inherits GridPanel;
@namespace Roguemoji

<style>
    .equipment_bg 
    {
        opacity: 0.005;
        background-color: transparent;
        box-shadow: 0px 0px 0px #0000ff;
        position:absolute;
        pointer-events:all;
        background-repeat: repeat;
        background-position: 0 0;
        background-size: 80px;
        border-radius:3px;
        width:100%;
        height:100%;
    }
</style>

<root>
    <div class="equipment_bg" style="background-image: url( textures/bg_tile.png );"></div>

    @{
        var player = RoguemojiGame.Instance.LocalPlayer;
    }

    @if (player?.EquipmentGridManager?.Things == null)
    {
        return;
    }

    @foreach(var thing in GetThings())
    {
        var index = GetIndex(thing.GridPos);
        <GridCell style="left: @(thing.GridPos.x * 40); top: @(thing.GridPos.y * 40);" Thing=@thing GridIndex=@index />

        if (thing == player.SelectedThing)
        {
            <div class="selected" style="left: @(thing.GridPos.x * 40); top: @(thing.GridPos.y * 40);"></div>
        }
    }
</root>

@code
{
    public override int GridWidth => RoguemojiGame.EquipmentWidth;
    public override int GridHeight => RoguemojiGame.EquipmentHeight;

    protected override IList<Thing> GetThings()
    {
        return RoguemojiGame.Instance.LocalPlayer.EquipmentGridManager.Things;
    }

    protected override void OnMouseDown(MousePanelEvent e)
    {
        base.OnMouseDown(e);

        var gridPos = GetGridPos(MousePosition);
        var player = RoguemojiGame.Instance.LocalPlayer;

        if (player.EquipmentGridManager.IsGridPosInBounds(gridPos))
            Hud.Instance.GridCellClicked(gridPos, GridType.Equipment, rightClick: e.Button == "mouseright", shift: Input.Down(InputButton.Run), doubleClick: false);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(GetThings().Count);
    }
}